# coding: utf-8

"""
    Open Park Project - OpenAPI 3.1

    The Open Park Project (OPP) is a free open-source project that aims to  provide a scalable and flexible platform for the management of parking areas.  Some useful links: - [Open Park Project](https://github.com/OpenParkProject) - [API definition](https://raw.githubusercontent.com/OpenParkProject/OPP-common/refs/heads/main/openapi.yaml)

    The version of the OpenAPI document: 0.1.0
    Contact: tollsimy.dev@protonmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.user_api import UserApi


class TestUserApi(unittest.TestCase):
    """UserApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UserApi()

    def tearDown(self) -> None:
        pass

    def test_delete_user(self) -> None:
        """Test case for delete_user

        Delete an existing user
        """
        pass

    def test_delete_user_by_username(self) -> None:
        """Test case for delete_user_by_username

        Delete a user by username
        """
        pass

    def test_delete_users(self) -> None:
        """Test case for delete_users

        Delete all users
        """
        pass

    def test_get_user(self) -> None:
        """Test case for get_user

        Get the currently logged user
        """
        pass

    def test_get_user_by_username(self) -> None:
        """Test case for get_user_by_username

        Get user by username
        """
        pass

    def test_get_users(self) -> None:
        """Test case for get_users

        Get all users
        """
        pass

    def test_update_user(self) -> None:
        """Test case for update_user

        Update an existing user
        """
        pass

    def test_update_user_by_username(self) -> None:
        """Test case for update_user_by_username

        Update an existing user by username
        """
        pass


if __name__ == '__main__':
    unittest.main()
